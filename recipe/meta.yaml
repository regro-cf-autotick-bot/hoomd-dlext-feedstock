{% set version = "0.5.0" %}
{% set cuda_major = (cuda_compiler_version | default("0.0", true)).split(".")[0] | int %}
{% set variant = ("cuda" ~ cuda_major ~ "_") if cuda_major != 0 else "" %}
{% set variant = hoomd ~ "_" ~ variant %}

package:
  name: hoomd-dlext
  version: {{ version }}

source:
  url: https://github.com/SSAGESLabs/hoomd-dlext/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 3521af38138b2ecf637a5888d81c0af2960fce2da96bb8982d0d023da23ba319

build:
  number: 2
  # Upstream package does not support Windows, Python < 3.6, or PyPy
  skip: true  # [win or py<36 or python_impl == "pypy"]
  skip: true  # [hoomd == "v2" and cuda_compiler_version != "None" and py>39]
  skip: true  # [hoomd == "v2" and cuda_compiler_version == "None" and py>310]
  skip: true  # [hoomd == "v3" and cuda_compiler_version not in ("11.2", "None")]
  string: {{ variant }}py{{ py }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  script_env:
    - CUDA_MAJOR={{ cuda_major }}
    - HOOMD_TAG={{ hoomd }}
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}
  ignore_run_exports_from:
    - tbb-devel

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != "None"]
    - cmake >=3.16,!=3.23.0
    - make

  host:
    - python
    - pybind11
    - pybind11-abi
    - dlpack >=0.5
    - eigen             # [hoomd != "v2"]
    - hoomd ==2.9.6     # [hoomd == "v2" and cuda_compiler_version != "None"]
    - hoomd >=2.9.6,<3  # [hoomd == "v2" and cuda_compiler_version == "None"]
    - hoomd >=3.5,<4    # [hoomd == "v3"]
    - hoomd >=4         # [hoomd == "v4"]
    - setuptools-scm
    - tbb-devel
    {% if linux64 and cuda_major >= 12 %}
    # CUDA dependencies (we don't really need all of them, but HOOMD checks that they are present)
    - cuda-version {{ cuda_compiler_version }}
    - cuda-cudart-dev
    - cuda-driver-dev
    - cuda-nvrtc-dev
    - cuda-profiler-api
    - libcublas-dev
    - libcufft-dev
    - libcusolver-dev
    - libcusparse-dev
    {% endif %}

  run:
    - python
    - {{ pin_compatible('hoomd', upper_bound='2.9.7') }}  # [hoomd == "v2" and cuda_compiler_version != "None"]
    - {{ pin_compatible('hoomd', max_pin='x.x') }}        # [hoomd == "v2" and cuda_compiler_version == "None"]
    - {{ pin_compatible('hoomd', max_pin='x.x') }}        # [hoomd != "v2"]

test:
  imports:
    # Build systems lack a working libcuda.so.1, cannot test GPU builds, even on the CPU.
    - hoomd.dlext  # [cuda_compiler_version == "None"]

about:
  home: https://github.com/SSAGESLabs/hoomd-dlext
  license: MIT
  license_family: MIT
  license_file: LICENSE.md
  summary: Wrapper for HOOMD-blue simulation data into DLPack data structures.

  description: |
    Provides access to HOOMD-blue simulation data on CPU or GPU via DLPack.
    This project is primarily designed to enable access to HOOMD-blue for
    the PySAGES project. At the moment, only HOOMD-blue version 2 is supported
    (support HOOMD-blue version 3 is in the works).

  doc_url: https://github.com/SSAGESLabs/hoomd-dlext
  dev_url: https://github.com/SSAGESLabs/hoomd-dlext

extra:
  recipe-maintainers:
    - pabloferz
    - nrouizem
